---
###
# A quick and dirty way to push custom Talos Linux build assets.
#
# Note: This can most likely be optimized using caching and other mechanisms.
###
name: Build and push Talos build assets

on:
  workflow_dispatch: { }

env:
  REGISTRY: ghcr.io

jobs:
  build-images:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/siderolabs/imager:v1.5.1
      options: --privileged
      volumes:
        - /tmp/talos-build-assets:/out
    steps:
      - name: Build installer w/ Intel UCode and DRBD
        run: |
          /bin/imager installer \
            --system-extension-image ghcr.io/siderolabs/intel-ucode:20230808@sha256:f08b0d4d7f745419ddc9c79220788243940fb1a1a61638065fa4d137b9dcead2 \
            --system-extension-image ghcr.io/siderolabs/drbd:9.2.4-v1.5.1@sha256:70cf04c14847c21b40024c82c88623337514b70f6946913a4273b61432c78cf2

      - name: blah
        uses: docker/setup-buildx-action@v2.9.1
        with:
          version: v0.11.2
          driver-opts: image=moby/buildkit:v0.12.0
          # buildkitd-flags: --debug

      - name: Log in to the Container registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: imjasonh/setup-crane@v0.1
      - name: Crane push installer
        run: |
          crane push /tmp/talos-build-assets/metal-amd64-installer.iso ${{ env.REGISTRY }}/talos-installer
