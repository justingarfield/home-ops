---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

vars:
  FLUX_OUT_DIR: '{{ .OUTPUT_DIR }}/flux'
  SOPS_OUT_DIR: '{{ .OUTPUT_DIR }}/sops'

tasks:

  verify:
    desc: Verify flux meets the prerequisites
    cmds:
      - flux check --pre

  install:
    desc: Install Flux into your cluster
    vars:
      AGE_KEY_FILE: '{{ .AGE_KEY_FILE | default "{{ .SOPS_OUT_DIR }}/age.agekey" }}'
    cmds:
      - kubectl apply --kustomize {{ .CLUSTER_DIR }}/bootstrap
      - task: create-sops-age-secret
        vars: { AGE_KEY_FILE: "{{ .AGE_KEY_FILE }}" }
      - kubectl apply --kustomize {{ .CLUSTER_DIR }}/flux/flux-system
      - task: reconcile

  create-namespace:
    desc: Creates a new namespace in the currently active K8s cluster
    vars:
      NAMESPACE_NAME: '{{ .NAMESPACE_NAME | default "flux-system" }}'
    preconditions:
      - sh: test {{ .NAMESPACE_NAME }}
        msg: Please provide a valid NAMESPACE_NAME
    cmds:
      - kubectl create namespace {{ .NAMESPACE_NAME }}

  create-sops-age-secret:
    desc: Creates a `sops-age` secret in the `flux-system`` namespace, using the generated Age key file.
    vars:
      AGE_KEY_DIR: '{{ .AGE_KEY_DIR | default .SOPS_OUT_DIR }}'
      _AGE_KEY_FILE: '{{ .AGE_KEY_DIR }}/age.agekey'
    preconditions:
      - sh: test -f {{ ._AGE_KEY_FILE }}
        msg: Age key file is not found. Did you forget to create it? {{ ._AGE_KEY_FILE }}
    cmds:
      - cat "{{ ._AGE_KEY_FILE }}" | kubectl -n flux-system create secret generic sops-age --from-file=age.agekey=/dev/stdin

  replace-sops-age-secret:
    desc: Replace the currently existing Age SOPS Key in the cluster
    vars:
      CLUSTER_NAME: '{{ .CLUSTER_NAME }}'
      AGE_KEY_FILE: '{{ .AGE_KEY_FILE | default "{{ .SOPS_OUT_DIR }}/age.agekey" }}'
    preconditions:
      - test {{ .CLUSTER_NAME }}
      - sh: test -f "{{ .AGE_KEY_FILE }}"
        msg: Age key file is not found. Did you forget to create it?
    cmds:
      - kubectl -n flux-system delete secret sops-age
      - task: create-sops-age-secret

  reconcile:
    desc: Force update Flux to pull in changes from your Git repository
    cmds:
      - flux reconcile -n flux-system source git flux-system
      - flux reconcile -n flux-system kustomization flux-system

  output-secret:
    desc: Output the flux-system secret
    cmds:
      - task: :_core:ensure-directory-exists
        vars: { DIRECTORY: "{{ .FLUX_OUT_DIR }}/staging" }
      - kubectl -n flux-system get secret flux-system -o yaml > {{ .FLUX_OUT_DIR }}/staging/flux-system.yaml

  rotate-key:
    desc: TODO-NEED TO IMPLEMENT THIS
    cmds:
      - kubectl -n flux-system delete secret flux-system
      - flux create secret git flux-system --url=ssh://git@github.com/{{ .GITHUB_USERNAME }}/{{ .GITHUB_REPO }}

  bootstrap-flux-cd:
    desc: Bootstraps Flux CD in a particular cluster
    vars:
      CLUSTER_NAME: '{{ .CLUSTER_NAME }}'
      GITHUB_TOKEN: '{{ .GITHUB_TOKEN }}'
      GITHUB_AUTHOR_EMAIL: '{{ .GITHUB_AUTHOR_EMAIL }}'
      GITHUB_AUTHOR_NAME: '{{ .GITHUB_AUTHOR_NAME }}'
      CLUSTER_DOMAIN: '{{ .CLUSTER_DOMAIN }}'
      GITHUB_USERNAME: '{{ .GITHUB_USERNAME }}'
      GITHUB_REPO: '{{ .GITHUB_REPO | default .REPOSITORY_REMOTE_ORIGIN_NAME }}' # Override this if you want to store your Flux stuff in another Repository
    preconditions:
      - sh: test {{ .CLUSTER_NAME }}
        msg: CLUSTER_NAME
      - sh: test {{ .GITHUB_TOKEN }}
        msg: GITHUB_TOKEN
      - sh: test {{ .GITHUB_AUTHOR_EMAIL }}
        msg: GITHUB_AUTHOR_EMAIL
      - sh: test "{{ .GITHUB_AUTHOR_NAME }}"
        msg: GITHUB_AUTHOR_NAME
      - sh: test {{ .CLUSTER_DOMAIN }}
        msg: CLUSTER_DOMAIN
      - sh: test {{ .GITHUB_USERNAME }}
        msg: GITHUB_USERNAME
      - sh: test {{ .GITHUB_REPO }}
        msg: GITHUB_REPO
    cmds:
      - defer: unset GITHUB_TOKEN
      - |
        export GITHUB_TOKEN={{ .GITHUB_TOKEN }}
        flux bootstrap github \
          --author-email={{ .GITHUB_AUTHOR_EMAIL }} \
          --author-name="{{ .GITHUB_AUTHOR_NAME }}" \
          --branch=main \
          --cluster-domain={{ .CLUSTER_DOMAIN }} \
          --commit-message-appendix="[ci skip]" \
          --owner={{ .GITHUB_USERNAME }} \
          --path=flux/clusters/{{ .CLUSTER_NAME }}/kustomizations \
          --personal \
          --repository={{ .GITHUB_REPO }}

  apply-existing-install:
    desc: Applies an existing flux install from a repo using SOPS age keys
    cmds:
      - kubectl apply --server-side --kustomize ./flux/clusters/staging/bootstrap
      - task: :sops:decrypt-and-apply-file
        vars: { FILENAME: ./flux/clusters/staging/bootstrap/age-key.sops.yaml }
      - task: :sops:decrypt-and-apply-file
        vars: { FILENAME: ./flux/clusters/staging/bootstrap/github-deploy-key.sops.yaml }
      - kubectl apply --server-side --kustomize ./flux/clusters/staging/kustomizations/flux-system
