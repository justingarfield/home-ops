# yaml-language-server: $schema=https://taskfile.dev/schema.json
---
version: '3'

vars:
  V_BOX_MANAGE_BINARY: VBoxManage
  BASE_FOLDER: 'C:\{{ .CLUSTER_NAME }}-vms'
  DEFAULT_DISK_SIZE_IN_MB: 32768 # 32GB
  DEFAULT_MEMORY_AMOUNT_IN_MB: 4096 # 4GB
  TALOS_LINUX_ISO: 'C:\Users\jgarf\Downloads\talos-amd64.iso'
  BRIDGE_ADAPTER: 'ASIX AX88179 USB 3.0 to Gigabit Ethernet Adapter #6'
  VCPU_COUNT: 4

tasks:

  create-vm:
    internal: true
    desc: Creates a new Linux-based virtual machine for a virtualized cluster.
    vars:
      VM_NAME: '{{ .VM_NAME }}'
      CLUSTER_NAME: '{{ .CLUSTER_NAME }}'
    cmds:
      - '"{{ .V_BOX_MANAGE_BINARY }}" createvm --name="{{ .VM_NAME }}" --basefolder="{{ .BASE_FOLDER }}" --groups="/{{ .CLUSTER_NAME }}-cluster" --ostype=Linux_64 --register'

  configure-vm:
    desc: Configures an existing virtual machine for use in a virtualized cluster.
    internal: true
    vars:
      VM_NAME: '{{ .VM_NAME }}'
      CLUSTER_NAME: '{{ .CLUSTER_NAME }}'
      MAC_ADDRESS: '{{ .MAC_ADDRESS | default "auto" }}'
    cmds:
      - |
        "{{ .V_BOX_MANAGE_BINARY }}" modifyvm "{{ .VM_NAME }}" \
          --memory={{ .DEFAULT_MEMORY_AMOUNT_IN_MB }} \
          --cpus={{ .VCPU_COUNT }} \
          --firmware=efi64 \
          --rtc-use-utc=on \
          --audio-enabled=off \
          --boot1=disk \
          --boot2=dvd \
          --boot3=none \
          --nic1=bridged \
          --macaddress1="{{ .MAC_ADDRESS }}" \
          --bridge-adapter1="{{ .BRIDGE_ADAPTER }}" \
          --hpet=on \
          --description="{{ .CLUSTER_NAME }} Cluster Node"

  add-piix4-storage-controller-to-vm:
    internal: true
    desc: Adds a PIIX4 (IDE) storage controller to an existing virtual machine.
    vars:
      VM_NAME: '{{ .VM_NAME }}'
    cmds:
      - '"{{ .V_BOX_MANAGE_BINARY }}" storagectl "{{ .VM_NAME }}" --name="PIIX4 (IDE)" --add=ide --controller=PIIX4 --hostiocache=on'

  add-ahci-storage-controller-to-vm:
    internal: true
    desc: Adds an AHCI (SATA) storage controller to an existing virtual machine.
    vars:
      VM_NAME: '{{ .VM_NAME }}'
    cmds:
      - '"{{ .V_BOX_MANAGE_BINARY }}" storagectl "{{ .VM_NAME }}" --name="AHCI (SATA)" --add=sata --controller=IntelAhci --portcount=1'

  attach-talos-livecd-to-vm:
    internal: true
    desc: Attaches the Talos Linux ISO Live CD to an existing virtual machine.
    vars:
      VM_NAME: '{{ .VM_NAME }}'
    cmds:
      - '"{{ .V_BOX_MANAGE_BINARY }}" storageattach "{{ .VM_NAME }}" --storagectl="PIIX4 (IDE)" --port=0 --device=0 --type=dvddrive --medium="{{ .TALOS_LINUX_ISO }}" --tempeject=on'

  create-virtual-disk-for-vm:
    internal: true
    desc: Creates a new Virtual Disk (in VDI format).
    vars:
      VM_NAME: '{{ .VM_NAME }}'
    cmds:
      - '"{{ .V_BOX_MANAGE_BINARY }}" createmedium --filename="{{ .BASE_FOLDER }}\{{ .CLUSTER_NAME }}-cluster\{{ .VM_NAME }}\{{ .VM_NAME }}.vdi" --size={{ .DEFAULT_DISK_SIZE_IN_MB }}'

  attach-virtual-disk-to-vm:
    internal: true
    desc: Attaches a Virtual Disk (.VDI) to an existing virtual machine.
    vars:
      VM_NAME: '{{ .VM_NAME }}'
    cmds:
      - '"{{ .V_BOX_MANAGE_BINARY }}" storageattach "{{ .VM_NAME }}" --storagectl="AHCI (SATA)" --port=0 --device=0 --type=hdd --nonrotational=on --medium="{{ .BASE_FOLDER }}\{{ .CLUSTER_NAME }}-cluster\{{ .VM_NAME }}\{{ .VM_NAME }}.vdi"'

  create-cluster-node-vm:
    desc: Creates and configures all the virtualized resources required for a virtualized cluster node.
    vars:
      CLUSTER_NAME: '{{ .CLUSTER_NAME }}'
      VM_NAME: '{{ .VM_NAME }}'
      MAC_ADDRESS: '{{ .MAC_ADDRESS }}'
    cmds:
      - task: create-vm
        vars: { VM_NAME: "{{ .VM_NAME }}", CLUSTER_NAME: "{{ .CLUSTER_NAME }}" }
      - task: configure-vm
        vars: { VM_NAME: "{{ .VM_NAME }}", CLUSTER_NAME: "{{ .CLUSTER_NAME }}", MAC_ADDRESS: "{{ .MAC_ADDRESS }}" }
      - task: add-piix4-storage-controller-to-vm
        vars: { VM_NAME: "{{ .VM_NAME }}" }
      - task: add-ahci-storage-controller-to-vm
        vars: { VM_NAME: "{{ .VM_NAME }}" }
      - task: attach-talos-livecd-to-vm
        vars: { VM_NAME: "{{ .VM_NAME }}" }
      - task: create-virtual-disk-for-vm
        vars: { VM_NAME: "{{ .VM_NAME }}", CLUSTER_NAME: "{{ .CLUSTER_NAME }}" }
      - task: attach-virtual-disk-to-vm
        vars: { VM_NAME: "{{ .VM_NAME }}", CLUSTER_NAME: "{{ .CLUSTER_NAME }}" }

  start-vm:
    internal: true
    dsec:
    vars:
      VM_NAME: '{{ .VM_NAME }}'
    cmds:
      - '"{{ .V_BOX_MANAGE_BINARY }}" startvm "{{ .VM_NAME }}" --type=gui'

  start-virtualized-cluster:
    desc: Starts the VMs associate with a particular virtualized cluster.
    vars:
      CLUSTER_NAME: '{{ .CLUSTER_NAME | default "staging" }}'
    cmds:
      - task: start-vm
        vars: { VM_NAME: "{{ .CLUSTER_NAME }}-cp01" }
      - task: start-vm
        vars: { VM_NAME: "{{ .CLUSTER_NAME }}-cp02" }
      - task: start-vm
        vars: { VM_NAME: "{{ .CLUSTER_NAME }}-cp03" }
      - task: start-vm
        vars: { VM_NAME: "{{ .CLUSTER_NAME }}-wk01" }
      - task: start-vm
        vars: { VM_NAME: "{{ .CLUSTER_NAME }}-wk02" }

  stop-vm:
    internal: true
    dsec:
    vars:
      VM_NAME: '{{ .VM_NAME }}'
    cmds:
      - '"{{ .V_BOX_MANAGE_BINARY }}" controlvm "{{ .VM_NAME }}" acpipowerbutton'

  stop-virtualized-cluster:
    desc: Stops the VMs associate with a particular virtualized cluster.
    vars:
      CLUSTER_NAME: '{{ .CLUSTER_NAME | default "staging" }}'
    cmds:
      - task: stop-vm
        vars: { VM_NAME: "{{ .CLUSTER_NAME }}-cp01" }
      - task: stop-vm
        vars: { VM_NAME: "{{ .CLUSTER_NAME }}-cp02" }
      - task: stop-vm
        vars: { VM_NAME: "{{ .CLUSTER_NAME }}-cp03" }
      - task: stop-vm
        vars: { VM_NAME: "{{ .CLUSTER_NAME }}-wk01" }
      - task: stop-vm
        vars: { VM_NAME: "{{ .CLUSTER_NAME }}-wk02" }

  create-virtualized-cluster:
    desc: Builds-out a virtualized Kubernetes 3-node Control Plane / 2-node Worker Plane using Talos Linux.
    vars:
      CLUSTER_NAME: '{{ .CLUSTER_NAME | default "staging" }}'
    cmds:
      - task: create-cluster-node-vm
        vars: { CLUSTER_NAME: "{{ .CLUSTER_NAME }}", VM_NAME: "{{ .CLUSTER_NAME }}-cp01", MAC_ADDRESS: "001337133701" }
      - task: create-cluster-node-vm
        vars: { CLUSTER_NAME: "{{ .CLUSTER_NAME }}", VM_NAME: "{{ .CLUSTER_NAME }}-cp02", MAC_ADDRESS: "001337133702" }
      - task: create-cluster-node-vm
        vars: { CLUSTER_NAME: "{{ .CLUSTER_NAME }}", VM_NAME: "{{ .CLUSTER_NAME }}-cp03", MAC_ADDRESS: "001337133703" }
      - task: create-cluster-node-vm
        vars: { CLUSTER_NAME: "{{ .CLUSTER_NAME }}", VM_NAME: "{{ .CLUSTER_NAME }}-wk01", MAC_ADDRESS: "001337133704" }
      - task: create-cluster-node-vm
        vars: { CLUSTER_NAME: "{{ .CLUSTER_NAME }}", VM_NAME: "{{ .CLUSTER_NAME }}-wk02", MAC_ADDRESS: "001337133705" }

  snapshot-virtualized-cluster:
    desc: Snapshots a virtualized Kubernetes 3-node Control Plane / 2-node Worker Plane.
    vars:
      CLUSTER_NAME: '{{ .CLUSTER_NAME | default "staging" }}'
      SNAPSHOT_NAME: '{{ .SNAPSHOT_NAME }}'
      SNAPSHOT_DESCRIPTION: '{{ .SNAPSHOT_DESCRIPTION | default "" }}'
    cmds:
      - task: snapshot-vm
        vars: { VM_NAME: "{{ .CLUSTER_NAME }}-cp01", SNAPSHOT_NAME: "{{ .SNAPSHOT_NAME }}", SNAPSHOT_DESCRIPTION: "{{ .SNAPSHOT_DESCRIPTION }}" }
      - task: snapshot-vm
        vars: { VM_NAME: "{{ .CLUSTER_NAME }}-cp02", SNAPSHOT_NAME: "{{ .SNAPSHOT_NAME }}", SNAPSHOT_DESCRIPTION: "{{ .SNAPSHOT_DESCRIPTION }}" }
      - task: snapshot-vm
        vars: { VM_NAME: "{{ .CLUSTER_NAME }}-cp03", SNAPSHOT_NAME: "{{ .SNAPSHOT_NAME }}", SNAPSHOT_DESCRIPTION: "{{ .SNAPSHOT_DESCRIPTION }}" }
      - task: snapshot-vm
        vars: { VM_NAME: "{{ .CLUSTER_NAME }}-wk01", SNAPSHOT_NAME: "{{ .SNAPSHOT_NAME }}", SNAPSHOT_DESCRIPTION: "{{ .SNAPSHOT_DESCRIPTION }}" }
      - task: snapshot-vm
        vars: { VM_NAME: "{{ .CLUSTER_NAME }}-wk02", SNAPSHOT_NAME: "{{ .SNAPSHOT_NAME }}", SNAPSHOT_DESCRIPTION: "{{ .SNAPSHOT_DESCRIPTION }}" }
