---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

vars:
  TALOS_DIR: '{{ .REPOSITORY_DIR }}/talos-linux'

tasks:

  apply-opnsense-bgp-label-to-all-nodes:
    desc: Applies a 'bgp-peering-policy' label with a value of 'opnsense' to all cluster nodes
    cmds:
      - kubectl label nodes --all bgp-peering-policy=opnsense

  status-verbose:
    desc: Uses the cilium binary in the DS for a verbose status
    cmds:
      - kubectl exec ds/cilium -n kube-system -- cilium status verbose

  get-endpoint-list:
    desc: Uses the cilium binary in the DS to query the endpoints list
    cmds:
      - kubectl -n kube-system exec ds/cilium -- cilium endpoint list

  install-via-helm:
    internal: false
    desc: Installs the Cilium CNI for a particular cluster
    vars:
      CLUSTER_NAME: "{{.CLUSTER_NAME}}"
      CLUSTER_DIR: "{{.TALOS_DIR}}/{{.CLUSTER_NAME}}-cluster"
    cmds:
      - printf "[home-ops] Updating Helm repositories...\n"
      - helm repo update 1>/dev/null

      - printf "[home-ops] Generating Cilium manifest using Helm template...\n"
      - |
        helm template \
            cilium \
            cilium/cilium \
            --version {{ .CILIUM_VERSION }} \
            --namespace kube-system \
            --set ipam.mode=kubernetes \
            --set kubeProxyReplacement=strict \
            --set securityContext.capabilities.ciliumAgent="{CHOWN,KILL,NET_ADMIN,NET_RAW,IPC_LOCK,SYS_ADMIN,SYS_RESOURCE,DAC_OVERRIDE,FOWNER,SETGID,SETUID}" \
            --set securityContext.capabilities.cleanCiliumState="{NET_ADMIN,SYS_ADMIN,SYS_RESOURCE}" \
            --set cgroup.autoMount.enabled=false \
            --set cgroup.hostRoot=/sys/fs/cgroup \
            --set k8sServiceHost="control-plane.{{ .CLUSTER_DOMAIN }}" \
            --set k8sServicePort="{{ .CLUSTER_API_SERVER_PORT }}" > {{ .CLUSTER_DIR }}/cilium.yaml \
            --set bgpControlPlane.enabled=true \
            --set ingressController.enabled=true \
            --set ingressController.loadbalancerMode=shared \
            --set hubble.relay.enabled=true \
            --set hubble.ui.enabled=true \
            --set hubble.peerService.clusterDomain="{{ .CLUSTER_DOMAIN }}" \
            --set tunnelPort=6669

      - printf "[home-ops] Applying Cilium manifest to {{.CLUSTER_NAME}} cluster...\n"
      - kubectl apply -f {{ .CLUSTER_DIR }}/cilium.yaml 1>/dev/null
