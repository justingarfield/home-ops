---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

dotenv: [ .env.sops.common, .env.sops.staging ]
# dotenv: [ .env.sops.common, .env.sops.production ]

vars:
  REPOSITORY_DIR:
    sh: git rev-parse --show-toplevel
  _OUTPUT_ROOT_DIR: '{{ .OUTPUT_ROOT_DIR | default .REPOSITORY_DIR }}'
  _NORMALIZED_OUTPUT_ROOT_DIR: '{{ ._OUTPUT_ROOT_DIR | replace "_out/" "" | replace "_out" "" }}/_out'
  _OUTPUT_ENV_DIR: '{{ ._NORMALIZED_OUTPUT_ROOT_DIR }}/{{ .ENVIRONMENT_NAME }}'
  _NORMALIZED_OUTPUT_ENV_DIR: '{{ ._OUTPUT_ENV_DIR | lower }}'
  OUTPUT_DIR: '{{ ._NORMALIZED_OUTPUT_ENV_DIR }}'
  REPOSITORY_REMOTE_ORIGIN_NAME:
    sh: basename -s .git `git config --get remote.origin.url`

includes:
  _core: .taskfiles/_Core.yaml
  azure:
    taskfile: .taskfiles/AzureTasks.yaml
    aliases: [ az ]
  cilium:
    taskfile: .taskfiles/CiliumTasks.yaml
    aliases: [ cil ]
  cloudflareApiTasks:
    taskfile: .taskfiles/CloudflareApiTasks.yaml
    aliases: [ cf ]
  csidrivers: .taskfiles/CsiDrivers.yaml
  docker: .taskfiles/DockerTasks.yaml
  flux: .taskfiles/FluxTasks.yaml
  kubectl: .taskfiles/Kubectl.yaml
  misc: .taskfiles/MiscTasks.yaml
  # openssl: .taskfiles/OpenSslTasks.yaml
  pki: .taskfiles/PkiTasks.yaml
  precommit:
    taskfile: .taskfiles/PreCommitTasks.yaml
    aliases: [ pc ]
  # sidero: .taskfiles/SideroTasks.yaml
  sops: .taskfiles/SopsTasks.yaml
  talos: .taskfiles/TalosTasks.yaml
  terraform:
    taskfile: .taskfiles/TerraformTasks.yaml
    aliases: [ tf ]
  tetragon: .taskfiles/TetragonTasks.yaml
  tooling: .taskfiles/ToolingTasks.yaml

silent: false

tasks:

  default:
    silent: true
    cmds: [ task -l ]

  generate-pki:
    desc: Example that generates all of the PKI files from scratch
    cmds:
      - task: _core:display-banner
      - task: _core:message
        vars: { MESSAGE: 'Generating PKI from scratch for: {{.ENVIRONMENT_NAME}}' }
      - task: _core:message
        vars: { MESSAGE: 'Outputting to folder: {{.ENV_OUTPUT_DIR}}\n------------------------------------------------------' }

      ### Root CA (should be stored OFFLINE somewhere safe...like in a...safe)
      #
      # Note: You will probably need the public-portion of this to create a bundle later for cert-chain trust reasons
      # Note: You may need to adjust the Root CA "pathlen" value if you attempt to go deeper than two-levels of Intermediaries
      - task: pki:generate-root-ca
        vars: { OUTPUT_FILENAME: my_staging_root-ca }

      ### Azure related
      - task: pki:generate-intermediate-ca
        vars: { OUTPUT_FILENAME: azure/azure_intermediate-ca, INTERMEDIARY_NAME: Azure }
      - task: pki:sign-intermediate-ca
        vars: { SIGNING_KEY_FILENAME: my_staging_root-ca, INTERMEDIATE_CA_FILENAME: azure/azure_intermediate-ca }

      # Azure Tenant Provisioner SP for Terraform
      - task: pki:generate-client-certificate
        vars: { SIGNING_KEY_FILENAME: azure/azure_intermediate-ca, CERT_CN: terraform.provisioner, OUTPUT_FILENAME: azure/terraform.provisioner }

      ### Kubernetes required Intermediary CAs and Certs
      #
      # See: https://kubernetes.io/docs/setup/best-practices/certificates/
      - task: pki:generate-intermediate-ca
        vars: { OUTPUT_FILENAME: kubernetes/kubernetes-intermediate, INTERMEDIARY_NAME: Kubernetes }
      - task: pki:sign-intermediate-ca
        vars: { SIGNING_KEY_FILENAME: my_staging_root-ca, INTERMEDIATE_CA_FILENAME: kubernetes/kubernetes-intermediate }

      - task: pki:generate-kubernetes-intermediate-ca
        vars: { OUTPUT_FILENAME: kubernetes/ca, CERT_CN: kubernetes-ca, SIGNING_KEY_FILENAME: kubernetes/kubernetes-intermediate }
      - task: pki:sign-intermediate-ca
        vars: { SIGNING_KEY_FILENAME: kubernetes/kubernetes-intermediate, INTERMEDIATE_CA_FILENAME: kubernetes/ca }

      - task: pki:generate-kubernetes-intermediate-ca
        vars: { OUTPUT_FILENAME: kubernetes/etcd/ca, CERT_CN: etcd-ca, SIGNING_KEY_FILENAME: kubernetes/kubernetes-intermediate }
      - task: pki:sign-intermediate-ca
        vars: { SIGNING_KEY_FILENAME: kubernetes/kubernetes-intermediate, INTERMEDIATE_CA_FILENAME: kubernetes/etcd/ca }

      - task: pki:generate-kubernetes-intermediate-ca
        vars: { OUTPUT_FILENAME: kubernetes/front-proxy-ca, CERT_CN: kubernetes-front-proxy-ca, SIGNING_KEY_FILENAME: kubernetes/kubernetes-intermediate }
      - task: pki:sign-intermediate-ca
        vars: { SIGNING_KEY_FILENAME: kubernetes/kubernetes-intermediate, INTERMEDIATE_CA_FILENAME: kubernetes/front-proxy-ca }

      - task: pki:generate-k8s-service-account-key
        vars: { OUTPUT_FILENAME: kubernetes/sa }

      - task: pki:prepare-k8s-directory

      ### OPNSense related
      - task: pki:generate-intermediate-ca
        vars: { OUTPUT_FILENAME: opnsense/opnsense-intermediate, INTERMEDIARY_NAME: OPNsense }
      - task: pki:sign-intermediate-ca
        vars: { SIGNING_KEY_FILENAME: my_staging_root-ca, INTERMEDIATE_CA_FILENAME: opnsense/opnsense-intermediate }

      - task: pki:generate-server-certificate
        vars: { SIGNING_KEY_FILENAME: opnsense/opnsense-intermediate, CERT_CN: opnsense01.home.arpa, SERVER_NAME: opnsense01, SERVER_IP: 192.168.1.2, OUTPUT_FILENAME: opnsense/opnsense01.home.arpa }
      - task: pki:generate-server-certificate
        vars: { SIGNING_KEY_FILENAME: opnsense/opnsense-intermediate, CERT_CN: opnsense02.home.arpa, SERVER_NAME: opnsense02, SERVER_IP: 192.168.1.3, OUTPUT_FILENAME: opnsense/opnsense02.home.arpa }

      - task: pki:generate-client-certificate
        vars: { SIGNING_KEY_FILENAME: my_staging_root-ca, CERT_CN: my_client_certificate, OUTPUT_FILENAME: clients/my_client_certificate }
